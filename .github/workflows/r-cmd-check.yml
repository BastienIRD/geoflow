# Build

name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: R ${{ matrix.config.r }} | ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {os: ubuntu-20.04,   r: '4.0.5', sdi: true, data_server: 'geoserver', metadata_server: 'pycsw', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04,   r: '4.0.5', sdi: true, data_server: 'geoserver', metadata_server: 'geonetwork', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
    steps:
      - uses: actions/checkout@v2
      # Install Linux systems libs
      - name: "Install required system libs"
        if: runner.os == 'Linux'
        run: |
          sudo apt install librdf0 librdf0-dev
      #SDI integration tests
      #-------------------------
      #Docker Geoserver set-up
      - name: Set up GeoServer (latest)
        if: ${{ matrix.config.sdi && matrix.config.data_server == 'geoserver' }}
        run: |
          docker pull kartoza/postgis
          docker run -d --name="postgis" kartoza/postgis
          docker run --link postgis:postgis -d -p 8080:8080 oscarfonts/geoserver:latest
      #OGC CSW integration tests
      #-------------------------
      #Docker PyCSW set-up
      - name: Set up PyCSW (latest)
        if: ${{ matrix.config.sdi && matrix.config.metadata_server == 'pycsw' }}
        run: |
          docker pull geopython/pycsw:latest
          docker run --name pycsw -v $GITHUB_WORKSPACE/tests/resources/pycsw/pycsw.cfg:/etc/pycsw/pycsw.cfg -d -p 8000:8000 geopython/pycsw:latest
      #Docker GeoNetwork set-up
      - name: Set up GeoNetwork (latest)
        if: ${{ matrix.config.sdi && matrix.config.metadata_server == 'geonetwork' }}
        run: |
          docker network create elasticnetwork
          docker run -d --name elasticsearch --net elasticnetwork --add-host host.docker.internal:host-gateway -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" elasticsearch:7.9.2
          docker run --add-host host.docker.internal:host-gateway -e ES_HOST=host.docker.internal --net elasticnetwork --name geonetwork -d -p 8000:8000 geonetwork
      #R tests
      #--------------------------
      #R Set-up
      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}
      #Install dependencies
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: covr
      #Test code coverage
      - name: Test code coverage
        run: covr::codecov()
        shell: Rscript {0}
      #Check R Package
      - name: Check R package
        uses: r-lib/actions/check-r-package@check-r-package
        with:
          artifact-name: geoflow_r-${{ matrix.config.r }}_${{ matrix.config.os }}-results
